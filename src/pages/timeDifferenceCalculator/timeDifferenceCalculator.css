@import url('https://fonts.googleapis.com/css2?family=Edu+AU+VIC+WA+NT+Guides:wght@400..700&family=Shadows+Into+Light&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Edu+AU+VIC+WA+NT+Guides:wght@400..700&family=Shadows+Into+Light&family=The+Girl+Next+Door&display=swap');
* {
  background-color: rgb(255, 242, 227);
  font-family:system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  font-size: 1.1rem;
  box-sizing: border-box;

}
/**
  Нормализация блочной модели
 */
 *,
 ::before,
 ::after {
   box-sizing: border-box;
 }
 
 /**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }
 
 /**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }
 
 /**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
 :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }
 
 /**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
 :where(ul[class]) {
   list-style: none;
 }
 
 :where(address[class]) {
   font-style: normal;
 }
 
 /**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
 p {
   --paragraphMarginBottom: 24px;
 
   margin-block: 0;
 }
 
 /**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
 p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 }
 
 
 /**
   Упрощаем работу с изображениями и видео
  */
 img,
 video {
   display: block;
   max-width: 100%;
   height: auto;
 }
 
 /**
   Наследуем свойства шрифт для полей ввода
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }
 
 html {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   height: 100%;
   /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
   scrollbar-gutter: stable;
 }
 
 /**
   Плавный скролл
  */
 html,
 :has(:target) {
   scroll-behavior: smooth;
 }
 
 body {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   min-height: 100%;
   /**
     Унифицированный интерлиньяж
    */
   line-height: 1.5;
 }
 
 /**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
 a:where([class]) {
   display: inline-flex;
 }
 
 /**
   Курсор-рука при наведении на элемент
  */
 button,
 label {
   cursor: pointer;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут fill со значением 'none' или начинается с 'url')
  */
 :where([fill]:not(
   [fill="none"],
   [fill^="url"]
 )) {
   fill: currentColor;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
 :where([stroke]:not(
   [stroke="none"],
   [stroke^="url"]
 )) {
   stroke: currentColor;
 }
 
 /**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
 svg * {
   transition-property: fill, stroke;
 }
 
 /**
   Приведение рамок таблиц в классический 'collapse' вид
  */
 :where(table) {
   border-collapse: collapse;
   border-color: currentColor;
 }
 
 /**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
 @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 }
 
::-webkit-scrollbar{
  width: 0;
}

.container-path {
  font-weight: 400;
  font-style: normal;
}

.container-path p {
  font-optical-sizing: auto;
  font-weight: 600;
  font-style: normal;
  font-size: 24px;
  margin: 0;
  padding: 0;
}
.btn-container {
  display: flex;
  justify-content: space-evenly;
}
.btn-start,
.btn-stop,
.btn-finish {
  width: 230px;
  cursor: pointer;
  display: inline-block;
  background-color: rgb(87, 178, 148);
  margin: auto;
  padding: 40px 0;
  color: white;
  font-weight: 400;
  font-size: 2vw;
  border-radius: 10px;
  text-align: center;
  text-decoration: none;
  outline: none;
  box-shadow: 2px 8px rgba(125, 125, 125, 1);

  transition: 
    0.3s ease color, 
    0.3s ease background-color,
    0.3s ease border-radius;
}
.btn-start:hover,
.btn-stop:hover,
.btn-finish:hover {
  background-color: rgb(110, 218, 182);
  box-shadow: 1px 4px rgba(0, 0, 0, 0.1);
  transition: 
    0.3s ease background-color,
    0.5s ease box-shadow,
}
.btn-start:active,
.btn-stop:active,
.btn-finish:active {
  background-color: rgb(71, 148, 122);
  box-shadow: 1px 1px rgba(0, 0, 0, 0.3);
  transform: translateY(4px);
}
.btn-disabled {
  background-color: rgba(87, 178, 148, 0.5);
  cursor: not-allowed;
  box-shadow: none;
  opacity: 0.7;
}

.wstecz-button {
  font-size: 60px;
  cursor: pointer;
  margin: 0;
  padding: 0;
  border: none;
  transition: 
    0.2s ease transform,
    0.1s ease text-shadow,
}
.wstecz-button:hover {
  transform: translateX(-50px);
  text-shadow: 0px 0px rgba(0, 0, 0, 0.5);
  transition: 
    0.2s ease transform,
    0.1s ease text-shadow,
}

.category-container {
  width: 100vw;
  margin: 1em 0;
  display: flex;
  justify-content: center;

}

.item-container button,
.second-container button,
.sub-container button  {
  width: 30vw;
  margin-bottom: 10px;
  padding: 5px;
  display: flex;
  justify-content: center;
}

.container-with-time {
  margin: 0 0 10px 10px;
}

button.selected,
button.not-selected {
  padding: 9px;
  margin: 18px;
  border-radius: 50px;
  font-weight: 700;
  font-size: 16px;
  box-shadow: 2px 8px rgba(125, 125, 125, 1);
  transition: 
    0.2s ease background-color,
    0.4s ease box-shadow,

}
.selected {
  background-color: rgb(110, 218, 182);
  color: azure;

} 
.selected:hover {
  background-color: rgb(110, 218, 182);
}
.not-selected:hover {
  color: azure;
  background-color: rgb(110, 218, 182);
  box-shadow: 1px 4px rgba(0, 0, 0, 0.1);

  transition: 
    0.2s ease background-color,
    0.4s ease box-shadow,
}
.current-categry-text {
  position: fixed;
  right: 2vw;
  top: 2vh;
  padding: 0 10px;
  border: 2px solid rgb(140, 140, 140);
  border-radius: 20px;
  font-weight: 700;
  font-size: 24px;
}

@media (max-width: 1080px) {
  p {
    font-size: 30px;
    margin: 10px 0px;
  }
  .main-container {
    width: 100vw;
    margin: 0;
    padding: 0;
  }

  .btn-start,
  .btn-stop,
  .btn-finish {
    font-size: 54px;
  }

  .category-container {
    width: 100vw;
  }

  .item-container button,
  .second-container button,
  .sub-container button {
    width: 45vw;
    font-size: 36px;
    word-break: break-word;
  }

  .current-categry-text {
    top: 1vh;
    background-color: transparent;
    pointer-events: none;
  }
  .current-categry-text p {
    font-size: 36px;
    background-color: transparent;
  }

}